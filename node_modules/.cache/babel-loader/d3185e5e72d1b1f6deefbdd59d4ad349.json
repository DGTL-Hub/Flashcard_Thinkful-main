{"ast":null,"code":"var _jsxFileName = \"/home/digital_foundry/AHHHHH/Flashcard_Thinkful-main/src/Layout/Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [cards, setCards] = useState([]);\n  const [cardNumber, setCardNumber] = useState(1);\n  const [front, isFront] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    async function fetchData() {\n      const abortController = new AbortController();\n      const response = await readDeck(deckId, abortController.signal);\n      setDeck(response);\n      setCards(response.cards);\n      return () => {\n        abortController.abort();\n      };\n    }\n\n    fetchData();\n  }, [deckId]);\n\n  function nextCard(index, total) {\n    console.log(index);\n\n    if (index < total) {\n      setCardNumber(cardNumber + 1);\n      isFront(true);\n    } else {\n      if (window.confirm(`Restart cards? Click 'cancel' to return to the home page`)) {\n        setCardNumber(1);\n        isFront(true);\n      } else {\n        history.push(\"/\");\n      }\n    }\n  }\n\n  function flipCard() {\n    if (front) {\n      isFront(false);\n    } else {\n      isFront(true);\n    }\n  }\n\n  function showNextButton(cards, index) {\n    if (front) {\n      return null;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextCard(index + 1, cards.length),\n        className: \"btn btn-primary mx-1\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  function enoughCards() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: cards.map((card, index) => {\n        if (index === cardNumber - 1) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-title\",\n              children: `Card ${index + 1} of ${cards.length}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-text\",\n              children: front ? card.front : card.back\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: flipCard,\n              className: \"btn btn-secondary mx-1\",\n              children: \"Flip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), showNextButton(cards, index)]\n          }, card.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this);\n        }\n\n        return false;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n  function notEnoughCards() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Not enough cards.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You need at least 3 cards to study. There are \", cards.length, \" \", \"cards in this deck.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/cards/new`,\n        className: \"btn btn-primary mx-1\",\n        children: \"Add Cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/decks/${deckId}`,\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"breadcrumb-item active\",\n        children: \"Study\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: `${deck.name}: Study`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: cards.length === 0 ? notEnoughCards() : cards.length > 2 ? enoughCards() : notEnoughCards()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Study, \"Jh65GSSP0JN+BXSknbnHfd4OrOc=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["/home/digital_foundry/AHHHHH/Flashcard_Thinkful-main/src/Layout/Study.js"],"names":["React","useEffect","useState","Link","useParams","useHistory","readDeck","Study","deckId","deck","setDeck","cards","setCards","cardNumber","setCardNumber","front","isFront","history","fetchData","abortController","AbortController","response","signal","abort","nextCard","index","total","console","log","window","confirm","push","flipCard","showNextButton","length","enoughCards","map","card","back","id","notEnoughCards","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../utils/api/index\";\n\nfunction Study() {\n    const { deckId } = useParams();\n    const [deck, setDeck] = useState({});\n    const [cards, setCards] = useState([]);\n    const [cardNumber, setCardNumber] = useState(1);\n    const [front, isFront] = useState(true);\n    const history = useHistory();\n\n    useEffect(() => {\n        async function fetchData() {\n            const abortController = new AbortController();\n            const response = await readDeck(deckId, abortController.signal);\n            setDeck(response);\n            setCards(response.cards);\n            return () => {\n                abortController.abort();\n            };\n        }\n        fetchData();\n    }, [deckId]);\n\n    function nextCard(index, total) {\n        console.log(index);\n        if (index < total) {\n            setCardNumber(cardNumber + 1);\n            isFront(true);\n        } else {\n            if (\n                window.confirm(\n                    `Restart cards? Click 'cancel' to return to the home page`\n                )\n            ) {\n                setCardNumber(1);\n                isFront(true);\n            } else {\n                history.push(\"/\");\n            }\n        }\n    }\n\n    function flipCard() {\n        if (front) {\n            isFront(false);\n        } else {\n            isFront(true);\n        }\n    }\n\n    function showNextButton(cards, index) {\n        if (front) {\n            return null;\n        } else {\n            return (\n                <button\n                    onClick={() => nextCard(index + 1, cards.length)}\n                    className=\"btn btn-primary mx-1\"\n                >\n                    Next\n                </button>\n            );\n        }\n    }\n\n    function enoughCards() {\n        return (\n            <div className=\"card\">\n                {cards.map((card, index) => {\n                    if (index === cardNumber - 1) {\n                        return (\n                            <div className=\"card-body\" key={card.id}>\n                                <div className=\"card-title\">\n                                    {`Card ${index + 1} of ${cards.length}`}\n                                </div>\n                                <div className=\"card-text\">\n                                    {front ? card.front : card.back}\n                                </div>\n                                <button\n                                    onClick={flipCard}\n                                    className=\"btn btn-secondary mx-1\"\n                                >\n                                    Flip\n                                </button>\n                                {showNextButton(cards, index)}\n                            </div>\n                        );\n                    }\n                    return false;\n\n                })}\n            </div>\n        );\n    }\n\n    function notEnoughCards() {\n        return (\n            <div>\n                <h2>Not enough cards.</h2>\n                <p>\n                    You need at least 3 cards to study. There are {cards.length}{\" \"}\n                    cards in this deck.\n                </p>\n                <Link\n                    to={`/decks/${deck.id}/cards/new`}\n                    className=\"btn btn-primary mx-1\"\n                >\n                    Add Cards\n                </Link>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <ol className=\"breadcrumb\">\n                <li className=\"breadcrumb-item\">\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li className=\"breadcrumb-item\">\n                    <Link to={`/decks/${deckId}`}>{deck.name}</Link>\n                </li>\n                <li className=\"breadcrumb-item active\">Study</li>\n            </ol>\n            <div>\n                <h2>{`${deck.name}: Study`}</h2>\n                <div>\n                    {cards.length === 0\n                        ? notEnoughCards()\n                        : cards.length > 2\n                        ? enoughCards()\n                        : notEnoughCards()}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Study;\n"]},"metadata":{},"sourceType":"module"}